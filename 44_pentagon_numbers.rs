/*

Compile with `rustc 44_pentagon_numbers.rs`
Run with `./44_pentagon_numbers`

Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are:
1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...
It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not pentagonal.
Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal
and D = |Pk − Pj| is minimised; what is the value of D?

*/

fn main() {
    let v = get_pentagonal_nrs(5000);
    for i in &v {
        for j in &v {
            match v.binary_search(&(i + j)) {
                Ok(_u) => {
                    match v.binary_search(&(j - i)) {
                        Ok(_u) => {
                            println!("Found a match with i: {}, j: {}, |i - j|: {}", i, j, (i - j).abs());
                        }
                        Err(_e) => {
                        }
                    }
                }
                Err(_e) => {
                }
            }
        }
    }
}

fn get_pentagonal_nrs(n: i32) -> Vec<i32> {
    let mut vec = Vec::new();
    for i in 1..n {
        vec.push(i*(3*i-1)/2);
    }
    return vec;
}
